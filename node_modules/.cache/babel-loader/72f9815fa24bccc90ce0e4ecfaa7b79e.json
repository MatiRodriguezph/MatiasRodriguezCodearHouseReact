{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Mati\\\\Desktop\\\\MatiasRodriguezReactv2\\\\src\\\\components\\\\Context\\\\CartContext.js\",\n    _s = $RefreshSig$();\n\nimport { children, createContext, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const contextoCarrito = /*#__PURE__*/createContext();\nconst {\n  Provider\n} = contextoCarrito;\nexport const ProviderCarrito = ({\n  children\n}) => {\n  _s();\n\n  const [arrayProductos, setArrayProductos] = useState([]); //El estado \"Contador\" sirve para llevar un registro de la cantidad TOTAL\n  //de elementos agregados al carrito. Se usa para ir actualizando el\n  //badge del CartWidget\n\n  const [contador, setContador] = useState(0);\n  let arrayAuxiliar = [];\n  let contadorAuxiliar = 0;\n\n  const addItem = (item, quantity) => {\n    if (isInCart(item.id)) {\n      for (const producto of arrayProductos) {\n        if (producto.id == item.id) producto.cantidadComprada += quantity;\n      }\n    } else {\n      arrayAuxiliar = arrayProductos;\n      arrayAuxiliar.push(item);\n      setArrayProductos(arrayAuxiliar);\n    }\n\n    contadorAuxiliar = contador + quantity;\n    setContador(contadorAuxiliar);\n  };\n\n  const removeItem = itemId => {\n    arrayProductos.forEach((elemento, indice, array) => {\n      if (elemento.id == itemId) {\n        setContador(contador - elemento.cantidadComprada);\n        arrayProductos.splice(indice, 1);\n      }\n    });\n  };\n\n  const clearCart = () => {\n    setArrayProductos([]);\n    setContador(0);\n  };\n\n  const isInCart = itemId => {\n    if (arrayProductos.find(elemento => elemento.id == itemId)) return true;else return false;\n  };\n\n  const valorDelContexto = {\n    arrayProductos: arrayProductos,\n    contador: contador,\n    setContador: setContador,\n    addItem: addItem,\n    removeItem: removeItem,\n    clearCart: clearCart\n  };\n  return /*#__PURE__*/_jsxDEV(Provider, {\n    value: valorDelContexto,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ProviderCarrito, \"ZwP+hhI1efNjc1P7JXSUijwThAY=\");\n\n_c = ProviderCarrito;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProviderCarrito\");","map":{"version":3,"sources":["C:/Users/Mati/Desktop/MatiasRodriguezReactv2/src/components/Context/CartContext.js"],"names":["children","createContext","useState","contextoCarrito","Provider","ProviderCarrito","arrayProductos","setArrayProductos","contador","setContador","arrayAuxiliar","contadorAuxiliar","addItem","item","quantity","isInCart","id","producto","cantidadComprada","push","removeItem","itemId","forEach","elemento","indice","array","splice","clearCart","find","valorDelContexto"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,aAAnB,EAAkCC,QAAlC,QAAkD,OAAlD;;AAEA,OAAO,MAAMC,eAAe,gBAAGF,aAAa,EAArC;AAEP,MAAM;AAACG,EAAAA;AAAD,IAAaD,eAAnB;AAEA,OAAO,MAAME,eAAe,GAAG,CAAC;AAACL,EAAAA;AAAD,CAAD,KAAgB;AAAA;;AAE3C,QAAM,CAACM,cAAD,EAAiBC,iBAAjB,IAAsCL,QAAQ,CAAC,EAAD,CAApD,CAF2C,CAI3C;AACA;AACA;;AACA,QAAM,CAACM,QAAD,EAAWC,WAAX,IAA0BP,QAAQ,CAAC,CAAD,CAAxC;AAEA,MAAIQ,aAAa,GAAG,EAApB;AACA,MAAIC,gBAAgB,GAAG,CAAvB;;AAEA,QAAMC,OAAO,GAAG,CAACC,IAAD,EAAOC,QAAP,KAAoB;AAChC,QAAIC,QAAQ,CAACF,IAAI,CAACG,EAAN,CAAZ,EAAsB;AAClB,WAAK,MAAMC,QAAX,IAAuBX,cAAvB,EAAuC;AACnC,YAAIW,QAAQ,CAACD,EAAT,IAAeH,IAAI,CAACG,EAAxB,EAA4BC,QAAQ,CAACC,gBAAT,IAA6BJ,QAA7B;AAC/B;AACJ,KAJD,MAIO;AACHJ,MAAAA,aAAa,GAAGJ,cAAhB;AACAI,MAAAA,aAAa,CAACS,IAAd,CAAmBN,IAAnB;AACAN,MAAAA,iBAAiB,CAACG,aAAD,CAAjB;AACH;;AACDC,IAAAA,gBAAgB,GAAGH,QAAQ,GAAGM,QAA9B;AACAL,IAAAA,WAAW,CAACE,gBAAD,CAAX;AACH,GAZD;;AAcA,QAAMS,UAAU,GAAGC,MAAM,IAAI;AACzBf,IAAAA,cAAc,CAACgB,OAAf,CAAuB,CAACC,QAAD,EAAWC,MAAX,EAAmBC,KAAnB,KAA6B;AAChD,UAAIF,QAAQ,CAACP,EAAT,IAAeK,MAAnB,EAA2B;AACvBZ,QAAAA,WAAW,CAACD,QAAQ,GAAGe,QAAQ,CAACL,gBAArB,CAAX;AACAZ,QAAAA,cAAc,CAACoB,MAAf,CAAsBF,MAAtB,EAA6B,CAA7B;AACH;AACJ,KALD;AAMH,GAPD;;AASA,QAAMG,SAAS,GAAG,MAAM;AACpBpB,IAAAA,iBAAiB,CAAC,EAAD,CAAjB;AACAE,IAAAA,WAAW,CAAC,CAAD,CAAX;AACH,GAHD;;AAKA,QAAMM,QAAQ,GAAGM,MAAM,IAAI;AACvB,QAAIf,cAAc,CAACsB,IAAf,CAAoBL,QAAQ,IAAIA,QAAQ,CAACP,EAAT,IAAeK,MAA/C,CAAJ,EAA4D,OAAO,IAAP,CAA5D,KACK,OAAO,KAAP;AACR,GAHD;;AAKA,QAAMQ,gBAAgB,GAAG;AACrBvB,IAAAA,cAAc,EAAEA,cADK;AAErBE,IAAAA,QAAQ,EAAEA,QAFW;AAGrBC,IAAAA,WAAW,EAAEA,WAHQ;AAIrBG,IAAAA,OAAO,EAAEA,OAJY;AAKrBQ,IAAAA,UAAU,EAAEA,UALS;AAMrBO,IAAAA,SAAS,EAAEA;AANU,GAAzB;AASA,sBACI,QAAC,QAAD;AAAU,IAAA,KAAK,EAAEE,gBAAjB;AAAA,cACK7B;AADL;AAAA;AAAA;AAAA;AAAA,UADJ;AAMH,CA5DM;;GAAMK,e;;KAAAA,e","sourcesContent":["import { children, createContext, useState } from \"react\";\n\nexport const contextoCarrito = createContext()\n\nconst {Provider} = contextoCarrito\n\nexport const ProviderCarrito = ({children}) => {\n    \n    const [arrayProductos, setArrayProductos] = useState([])\n    \n    //El estado \"Contador\" sirve para llevar un registro de la cantidad TOTAL\n    //de elementos agregados al carrito. Se usa para ir actualizando el\n    //badge del CartWidget\n    const [contador, setContador] = useState(0)\n\n    let arrayAuxiliar = []\n    let contadorAuxiliar = 0\n\n    const addItem = (item, quantity) => {\n        if (isInCart(item.id)){\n            for (const producto of arrayProductos) {\n                if (producto.id == item.id) producto.cantidadComprada += quantity\n            }\n        } else {\n            arrayAuxiliar = arrayProductos\n            arrayAuxiliar.push(item)\n            setArrayProductos(arrayAuxiliar)\n        }\n        contadorAuxiliar = contador + quantity\n        setContador(contadorAuxiliar)\n    }\n\n    const removeItem = itemId => {\n        arrayProductos.forEach((elemento, indice, array) => {\n            if (elemento.id == itemId) {\n                setContador(contador - elemento.cantidadComprada)\n                arrayProductos.splice(indice,1)\n            }\n        })\n    }\n\n    const clearCart = () => {\n        setArrayProductos([])\n        setContador(0)\n    }\n\n    const isInCart = itemId => {\n        if (arrayProductos.find(elemento => elemento.id == itemId)) return true;\n        else return false\n    }\n\n    const valorDelContexto = {\n        arrayProductos: arrayProductos,\n        contador: contador,\n        setContador: setContador,\n        addItem: addItem,\n        removeItem: removeItem,\n        clearCart: clearCart\n    }\n\n    return (\n        <Provider value={valorDelContexto}>\n            {children}\n        </Provider>\n    )\n\n}\n\n"]},"metadata":{},"sourceType":"module"}